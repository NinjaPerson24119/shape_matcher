#Roulette

#Grids (modulo must be 0 for square size | dimensions)
#Lower square sizes will greatly increase DB size for culling / possible speed
#The frame buffer can be thought of as the viewport
FrameBufferWidth: 1920
FrameBufferHeight: 1080
SquareSize: 12

#Meta

Name: roulette
RenderDistance: 10.0

#Optimization
#FPS (0 means as fast as possible)
#Linearization, higher is more simple

Fps: 0
gSLICrOn: false
ContourLinearizationEpsilon: 3.0
MinimumContourArea: 1500

#Background
BackgroundR: 0
BackgroundG: 0
BackgroundB: 255

#Transforms (angle in degrees. scale as decimal percent.)
RelativeTranslateX: 0
RelativeTranslateY: 0
RelativeTranslateZ: 0
UniformScale: 1
InitialRotX: 0
InitialRotY: 0
InitialRotZ: 0

#Angle ranges (negatives are accepted) relative to initial transforms
#Start and end values cannot be the same
StartRotateX: -30
EndRotateX: 31
StartRotateY: -30
EndRotateY: 31
StartRotateZ: 0
EndRotateZ: 359
RotateStep: 10

#Filters
#Filters cannot fully contain each other
# http://colorizer.org/ [You're welcome]
# A = Green <-> Red
# B = Blue <-> Yellow
FilterCount: 3

#Red
Filter_0_Mode: range
Filter_0_LowerL: 0
Filter_0_LowerA: 138
Filter_0_LowerB: 138
Filter_0_UpperL: 255
Filter_0_UpperA: 255
Filter_0_UpperB: 255

#Black
Filter_1_Mode: range
Filter_1_LowerL: 0
Filter_1_LowerA: 100
Filter_1_LowerB: 100
Filter_1_UpperL: 5
Filter_1_UpperA: 150
Filter_1_UpperB: 150

#Green
Filter_2_Mode: range
Filter_2_LowerL: 80
Filter_2_LowerA: 0
Filter_2_LowerB: 170
Filter_2_UpperL: 255
Filter_2_UpperA: 80
Filter_2_UpperB: 220
